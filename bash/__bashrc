# .bashrc

# do not load parent BASH if ~/.bash.noparent is present
if [ ! -f ~/.bash.noparent ]; then
    # Source global definitions
    if [ -f /etc/bashrc ]; then
        . /etc/bashrc
    fi
    if [ -f /etc/bash/bashrc ]; then
        . /etc/bash/bashrc
    fi
fi 

# If not running interactively, don't do anything
if [[ $- != *i* ]] ; then
    # Shell is non-interactive.  Be done now!
    return
fi

#Â disable completion of hidden files
bind 'set match-hidden-files off'

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=5000
HISTTIMEFORMAT="%d/%m/%Y - %T : "

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# enable color support of ls
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    export LS_COLORS="di=00;34:ow=01;34:mi=00;35:ln=00;35:ex=00;31"
fi

# ---------------------------------------------------------------------------
#  EDITOR
# ---------------------------------------------------------------------------

export EDITOR=/usr/bin/vim
export SVN_EDITOR=/usr/bin/vim
export GIT_EDITOR=/usr/bin/vim
export VISUAL=/usr/bin/vim

# ---------------------------------------------------------------------------
#  PROMPT
# ---------------------------------------------------------------------------

# set a minimalist prompt
red='\[\e[0;31m\]'      # Red
green='\[\e[0;32m\]'    # Green
blue='\[\e[0;34m\]'     # Bold Blue
boldred='\[\e[1;31m\]'  # Bold Red
reset='\[\e[0m\]'       # Text Reset

if [ "$USER" = "root" ] ; then
  # $bold$red
  PROMPT_USER_COLOR=$boldred 
  PROMPT_SYMBOL="#"
else
  PROMPT_USER_COLOR=$green
  PROMPT_SYMBOL="$"
fi

if [[ -n "$SSH_CLIENT$SSH2_CLIENT$SSH_TTY" ]] ; then
  PROMPT_SSH="@\h"
else
  PROMPT_SSH=""
fi

PS1="$PROMPT_USER_COLOR\u$PROMPT_SSH $blue\w$reset $PROMPT_SYMBOL "

# use liquiprompt if present
[[ $- = *i* ]] && [ -d ~/.liquidprompt ] && source ~/.liquidprompt/liquidprompt

# add git info to PS1
brname () {
    a=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
    if [ -n "$a" ]; then
        echo " [$a]"
    else
        echo ""
    fi
}
PS1="$PROMPT_USER_COLOR\u$PROMPT_SSH $blue\w \$(brname)$reset $PROMPT_SYMBOL "

# ---------------------------------------------------------------------------
#  PYTHON VIRTUALENV
# ---------------------------------------------------------------------------

export WORKON_HOME=~/.virtualenvs
if [ -f /usr/bin/virtualenvwrapper.sh ]; then
    source /usr/bin/virtualenvwrapper.sh
fi

# ---------------------------------------------------------------------------
#  EXTEND BASHRC
# ---------------------------------------------------------------------------

if [ -f ~/.bashrc.aliases ]; then
  source ~/.bashrc.aliases
fi

if [ -f ~/.bashrc.functions ]; then
  source ~/.bashrc.functions
fi

# ---------------------------------------------------------------------------
#  EXTEND BASHRC WITH CUSTOM FILE
# ---------------------------------------------------------------------------

if [ -f ~/.bashrc.custom ]; then
  source ~/.bashrc.custom
fi
