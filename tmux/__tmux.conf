# Core options (https://github.com/tmux-plugins/tmux-sensible)
#

# utf8 is on (tmux version < 2.3)
if-shell "if [[ `tmux -V | cut -d' ' -f2` -lt 2.3 ]]; then true; else false; fi" \
    'set -g utf8 on; set -g status-utf8 on'

# tmux messages are displayed for 3 seconds
set -g display-time 3000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# ===========================================================================
# Other options

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window
unbind-key C-b

set -g default-terminal "screen-256color"

# Start numbering at 1
set -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

## Status bar all
set -g status-fg colour236
set -g status-bg colour102

# Left
set -g status-left-fg black
set -g status-left 'tmux ###S|'
 
# Right
set -g status-right-fg black
set -g status-right '%a %b %d, %Y %H:%M'

## Window options color
set-window-option -g window-status-current-fg black

# Notifications
setw -g monitor-activity on
setw -g visual-activity on

# Auto rename
set-window-option -g automatic-rename off
set-option -g allow-rename off

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# History
set -g history-limit 20000

# Configure mouse (tmux version < 2.1)
if-shell "if [[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]; then true; else false; fi" \
    'setw -g mode-mouse off; set -g mouse-select-pane on; set -g mouse-resize-pane on; set -g mouse-select-window off'

# Splitting windows into panes with h and v
bind-key h split-window -v -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# Set up resize-pane keys
bind-key -n C-M-h resize-pane -L 1
bind-key -n C-M-l resize-pane -R 1
bind-key -n C-M-j resize-pane -D 1
bind-key -n C-M-k resize-pane -U 1

# Vi mode
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  "bind-key Escape copy-mode; \
  bind-key -t vi-copy Escape cancel; \
  bind-key p paste-buffer; \
  bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy V select-line; \
  bind-key -t vi-copy r rectangle-toggle; \
  bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi 'v' send -X begin-selection; \
  bind-key -T copy-mode-vi 'V' send -X select-line; \
  bind-key -T copy-mode-vi 'r' send -X rectangle-toggle; \
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

# Use Alt-arrow keys without prefix key to switch panes
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

# Shift arrow to switch windows
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# Copy & Paste between tmux and clipboard
# move x clipboard into tmux paste buffer
bind-key -n C-M-v run "xclip -o | tmux load-buffer - ; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind-key -n C-M-y run "tmux save-buffer - | xclip -i -selection clipboard >/dev/null"

# Move windows on the left (/) or on the right (*)
bind-key / swap-window -t -1
bind-key * swap-window -t +1

# Reload tmux config
unbind r
bind r source-file ~/.tmux.conf \; display-message "config reloaded!"

# =========================== END OF FILE ===================================

